#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
#include<string>
using  namespace std;

//函数对象（仿函数）
/*
函数对象在使用时，可以像普通函数那样调用，可以有参数，可以有返回值
函数对象超出普通函数的概念，函数对象可以有自己的状态
函数对象可以作为参数传递
*/

class MyAdd
{
public:
	int operator()(int v1, int v2)
	{
		return v1 + v2;
	}
};

//1.函数对象在使用时，可以像普通函数那样调用，可以有参数，可以有返回值
void test01()
{
	MyAdd myAdd;
	cout<< myAdd(10, 10) << endl;
}

//2.函数对象超出普通函数的概念，函数对象可以有自己的状态
class MyPrint
{
public:
	MyPrint()
	{
		this->m_Count =0;
	}
	void operator()(string test)
	{
		cout<<test<<endl;
		this->m_Count++;
	}
	int m_Count;		//内部自己的状态
};
void test02()
{
	MyPrint myprint;
	myprint("Hello world");
	myprint("Hello world");
	myprint("Hello world");
	myprint("Hello world");
	cout << "myprint调用的次数为：" << myprint.m_Count << endl;
}


//3.函数对象可以作为参数传递
void doPrint(MyPrint& mp, string test)
{
	mp(test);
}

void test03()
{
	MyPrint myprint;
	doPrint(myprint, "Hello C++");
}
int main()
{
	test01();
	test02();
	test03();
	system("pause");
	return 0;
}