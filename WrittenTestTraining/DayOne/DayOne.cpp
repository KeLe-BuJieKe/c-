
/*1、以下for循环的执行次数是（ C ）
 * for(x=0,y=0;(y=123)&&(x<4);x++)
 *A:是无限循环 B:循环次数不定 C:4次 D:3次
 为什么选C呢？
 这是因为for循环的判断语句中，尽管有这一句y=123但是后面还有一个条件就是x<4所以循环4次
 但如果只有y=123就是死循环
 * */

/*2、以下程序的运行结果是( B )
 int main()
 {
    printf("%s,%5.3s\n","computer","computer");
    //该题的意思截取3个字符，前面加2个空格，总占位长度5,5是占几个字符的宽度的含义
 }
 A:computer ,puter
 B:computer ,com
 C:computer, computer
 D:computer, compu.ter
 */

/*3、int *p[4]与选项中的说明（ C ）等价
 A、int p[4]
 B、int *p
 C、int *(p[4])
 D、int (*p)[4]
 */

/*4、若有定义语句： int year=1009 ， *p=&year ；以下不能使变量 year 中的值增至 1010 的语句是（ D ） 
 A、*p+=1;
 B、(*p)++;
 C、++(*p)
 D、*p++
 答：该题的考察的就是运算符的优先级：这里的 ++ 优先级高于 *，*优先级高于 += 
 所以这里的*p++是先让指针往后移4个直接在解引用这个指针
 */

/*5、若有定义语句： int a=10 ; double b=3.14 ; 则表达式 'A'+a+b 值的类型是（ C ）
 A、char
 B、int
 C、double
 D、float
*/

/*6、在（ C ）情况下适宜采用 inline 定义内联函数
 A、函数体含有循环语句
 B、函数体含有递归语句
 C、函数代码少、频繁调用
 D、函数代码多，不常调用
 答：内敛函数适合代码少、且频繁调用的函数。
 类的成员函数默认是内敛函数，但其是不是内敛函数需按编译器自行决定
 */

/*7、在 c++ 语言中，对函数参数默认值描述正确的是（ D ）
 A、函数参数的默认值只能设定一个
 B、一个函数的参数若有多个，则参数默认值的设定可以不连续
 C、函数参数必须设定默认值
 D、在设定了参数的默认值后，该参数后面定义的所有参数都必须设定默认
 答：函数的默认参数可以设置多个，且设置了默认值的该参数后面都必须设置成默认值。
 */

/*8、下列静态数据成员的特性中，错误的是（ D ）
 A、引用静态数据成员时，要在静态数据成员名前加<类名>和作用域符号
 B、说明静态数据成员时前边要加关键字static来修饰
 C、静态数据成员在类体外进行初始化
 D、静态数据成员不是所有对象所共有的
 答：成员包括成员函数和成员变量，静态成员也同理。
 并且静态成员在该类内属于整个类，不单独属于某个对象
 */

/*9、选择表达式 11|10 的结果（本题数值均为十进制）（ A ）
 A、11
 B、10
 C、8
 D、2
 答：
 1011
 1010
------
 1011
 */

 /*10、下面叙述不正确的是（ D ）
 A、派生类一般都用公有派生
 B、对基类成员的访问必须是无二义性的
 C、赋值兼容规则也适用于多重继承的组合
 D、父类的公有成员在派生类中仍然是公有的
 答：在派生类中继承下来的成员的属性与继承的权限和在基类的那个权限里有关关
  */


 /*
 标题：组队竞赛 | 时间限制：1秒 | 内存限制：32768K | 语言限制： 不限
【组队竞赛】牛牛举办了一次编程比赛,参加比赛的有3*n个选手,每个选手都有一个水平值a_i.现在要将这些选手进行组队,一共组成n个队伍,即每个队伍3人.牛牛发现
 队伍的水平值等于该队伍队员中第二高水平值。
 例如:
 一个队伍三个队员的水平值分别是3,3,3.那么队伍的水平值是3
 一个队伍三个队员的水平值分别是3,2,3.那么队伍的水平值是3
 一个队伍三个队员的水平值分别是1,5,2.那么队伍的水平值是2
 为了让比赛更有看点,牛牛想安排队伍使所有队伍的水平值总和最大。
 如样例所示:
 如果牛牛把6个队员划分到两个队伍
 如果方案为:
 team1:{1,2,5}, team2:{5,5,8}, 这时候水平值总和为7.
 而如果方案为:
 team1:{2,5,8}, team2:{1,5,5}, 这时候水平值总和为10.
 没有比总和为10更大的方案,所以输出10.
 输入描述：
 输入的第一行为一个正整数n(1 ≤ n ≤ 10^5)
 第二行包括3*n个整数a_i(1 ≤ a_i ≤ 10^9),表示每个参赛选手的水平值.
 输出描述：
 输出一个整数表示所有队伍的水平值总和最大值.
 示例1：
 输入
 2
 5 2 8 5 1 5
 输出
 10
*/
//思路：利用排序来得到一个有序序列
//在来选择两个数，从头开始选选一个数，从尾部选两个数，就得到下面的式子
//最后这里要注意的是：注意整形溢出，所以得用long long类型来存储我们的结果
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

int main()
{
    int n;
    cin >> n;
    vector<int>arr(n*3, 0);
    for (auto& e : arr)
    {
        cin >> e;
    }
    sort(arr.begin(), arr.end());
    long long ret = 0;
    for (int i = n; i <arr.size()-1; i+=2)
    {
        ret += arr[i];
    }
    cout << ret;
    return 0;
}




 /*
 标题：删除公共字符 | 时间限制：1秒 | 内存限制：32768K | 语言限制： 不限
【删除公共字符】输入两个字符串，从第一字符串中删除第二个字符串中所有的字符。例如，输入”They are students.”和”aeiou”，则删除之后的第一个字符
 串变成”Thy r stdnts.”
 输入描述：
 每个测试输入包含2个字符串
 输出描述：
 输出删除后的字符串
 示例1：
 输入
 They are students. aeiou
 输出
 Thy r stdnts.
 */

//解题思路：利用哈希表将子串的所有字符映射到哈希表中
//然后用主串一个个去哈希表中去等值映射，看该字符是不是子串中拥有的，有的就不用放入结果串中。没有的就放入结果串
#include<iostream>
#include<string>
using namespace std;
int main()
{
    string ret;
    string t; //主串
    string sub;//子串
    getline(cin, t);
    getline(cin, sub); 
    int hash[256] = { 0 };
    for (auto& e : sub)
    {
        hash[e] = 1;
    }
    for (auto& e : t)
    {
        if (hash[e] == 0)
        {
            ret += e;
        }
    }
    cout << ret;
    return 0;
}


